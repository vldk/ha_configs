telegram:
  # commands:
  #  /report - send current status

  script:
    send_system_status_report:
      alias: '–í—ñ–¥–ø–∞–≤–∏—Ç–∏ –ø–æ—Ç–æ—á–Ω–∏–π —Å—Ç–∞—Ç—É—Å'
      sequence:
        - service: notify.telegram_id1
          data:
            message: |
              {{"‚ô®"}} –û–ø–∞–ª–µ–Ω–Ω—è: {{ states('binary_sensor.boiler_is_on') }}

              {{"üå°"}} –í—ñ—Ç–∞–ª—å–Ω—è: {{ states('sensor.0x5c0272fffec72d04_temperature') }}‚ÑÉ
              {{"üå°"}} –°–ø–∞–ª—å–Ω—è: {{ states('sensor.0x847127fffe18e757_temperature') }}‚ÑÉ
              {{"üå°"}} –î–∏—Ç—è—á–∞: {{ states('sensor.0x5c0272fffebda093_temperature') }}‚ÑÉ
              {{"üå°"}} –ö—É—Ö–Ω—è: {{ state_attr('climate.0x847127fffe9f3342', 'current_temperature') }}‚ÑÉ

  automation:
    - id: Telegram Bot Menu
      alias: telegram_bot_menu
      trigger:
        platform: event
        event_type: telegram_command
        event_data:
          command: '/start'
      action:
        - service: notify.telegram_id1
          data:
            message: 'commands'
            data:
              keyboard:
                - '/report'
                # - '/siren'

    - id: –ó–≤—ñ—Ç –ø—Ä–∏ –∑–∞–ø—É—Å–∫—É
      alias: startup_bot_message
      trigger:
        - platform: homeassistant
          event: start
      action:
        - service: notify.telegram_id1
          data:
            message: |
              {{ "ü§ñ" }} –ó–∞–ø—É—Å–∫ HAs —Å–µ—Ä–≤–µ—Ä–∞ ({{ states('sensor.time_date') }})
        - delay: 00:02:00
        - service: script.turn_on
          entity_id: script.send_system_status_report

    - id: –ó–∞–ø–∏—Ç –Ω–∞ –∑–≤—ñ—Ç
      alias: send_report
      initial_state: true
      trigger:
      - platform: event
        event_type: telegram_command
        event_data:
          command: '/report'
      action:
        - service: script.turn_on
          entity_id:
            - script.send_system_status_report
