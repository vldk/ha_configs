telegram:
  # commands:
  #  /status - send current status

  script:
    send_system_status_report:
      alias: '–í—ñ–¥–ø–∞–≤–∏—Ç–∏ –ø–æ—Ç–æ—á–Ω–∏–π —Å—Ç–∞—Ç—É—Å'
      variables:
        # chat_id: 'None'
        msg: |
            ‚ô® –û–ø–∞–ª–µ–Ω–Ω—è: {{ states('binary_sensor.boiler_is_on') }}

            –í—ñ—Ç–∞–ª—å–Ω—è: üå°{{ states('sensor.0x5c0272fffec72d04_temperature') }}‚ÑÉ ü™ü {% if is_state('binary_sensor.0x00158d0001ddc9c2_contact', 'on') %} –í—ñ–¥–∫. {% else %} –ó–∞–∫—Ä. {% endif %} 
            –°–ø–∞–ª—å–Ω—è:  üå°{{ states('sensor.0x847127fffe18e757_temperature') }}‚ÑÉ ü™ü {% if is_state('binary_sensor.0x00158d0001de18e8_contact', 'on') %} –í—ñ–¥–∫. {% else %} –ó–∞–∫—Ä. {% endif %}
            –î–∏—Ç—è—á–∞:   üå°{{ states('sensor.0x5c0272fffebda093_temperature') }}‚ÑÉ ü™ü {% if is_state('binary_sensor.0x00158d0001e4d72a_contact', 'on') %} –í—ñ–¥–∫. {% else %} –ó–∞–∫—Ä. {% endif %}
            –ö—É—Ö–Ω—è:    üå°{{ state_attr('climate.0x847127fffe9f3342', 'current_temperature') }}‚ÑÉ ü™ü {% if is_state('binary_sensor.0x00158d0001e4c675_contact', 'on') %} –í—ñ–¥–∫. {% else %} –ó–∞–∫—Ä. {% endif %}
            –ú–∞–Ω—Å–∞—Ä–¥–∞: ü™ü {% if is_state('binary_sensor.0x00158d00019f49d5_contact', 'on') %} –í—ñ–¥–∫. {% else %} –ó–∞–∫—Ä. {% endif %} ü™ü {% if is_state('binary_sensor.0x00158d00019d08a8_contact', 'on') %} –í—ñ–¥–∫. {% else %} –ó–∞–∫—Ä. {% endif %}

            üö™ –í—Ö—ñ–¥–Ω—ñ {% if is_state('binary_sensor.0x00158d00019f34e2_contact', 'on') %} –í—ñ–¥–∫. {% else %} –ó–∞–∫—Ä. {% endif %}
            üö™ –í–æ—Ä–æ—Ç–∞ {% if is_state('binary_sensor.0x00158d0001e4a6db_contact', 'on') %} –í—ñ–¥–∫. {% else %} –ó–∞–∫—Ä. {% endif %}
            
            üî• –î–∏–º
            –ö—É—Ö–Ω—è: {% if is_state('binary_sensor.0x00158d0005294284_smoke', 'off') %} ‚úÖ {% else %} üî• {% endif %}
            –ü—ñ–¥–≤–∞–ª: {% if is_state('binary_sensor.0x00158d000544c35d_smoke', 'off') %} ‚úÖ {% else %} üî• {% endif %}
            2–π –µ—Ç–∞–∂: {% if is_state('binary_sensor.0x00158d00052d1217_smoke', 'off') %} ‚úÖ {% else %} üî• {% endif %}

      sequence:
        - service: notify.telegram_id1
          data:
            message: "{{msg}}"
        # - service: notify.telegram_id2
        #   data:
        #     message: "{{msg}}"


    send_on_smoke_detect_s1:
      alias: '–ê–ª—è—Ä–º–∞ –ø—Ä–∏ –≤–∏—è–≤–ª–µ–Ω–Ω—ñ –¥–∏–º—É'
      variables: 
        msg: |        
          {{"üî•üöí"}} –í–∏—è–≤–ª–µ–Ω–Ω–æ –¥–∏–º!!!

          –ö—É—Ö–Ω—è: {% if is_state('binary_sensor.0x00158d0005294284_smoke', 'off') %} ‚úÖ {% else %} üî• {% endif %} {% if is_state('binary_sensor.0x00158d0005294284_smoke', 'off') %} 
            {{ states('sensor.0x00158d0005294284_smoke_density') }} 
          {% endif %}
          –ü—ñ–¥–≤–∞–ª: {% if is_state('binary_sensor.0x00158d000544c35d_smoke', 'off') %} ‚úÖ {% else %} üî• {% endif %} {% if is_state('binary_sensor.0x00158d000544c35d_smoke', 'off') %} 
            {{ states('sensor.0x00158d000544c35d_smoke_density') }} 
          {% endif %}
          2–π –µ—Ç–∞–∂: {% if is_state('binary_sensor.0x00158d00052d1217_smoke', 'off') %} ‚úÖ {% else %} üî• {% endif %} {% if is_state('binary_sensor.0x00158d00052d1217_smoke', 'off') %} 
            {{ states('sensor.0x00158d00052d1217_smoke_density') }} 
          {% endif %}
      sequence:
        - service: notify.telegram_id1
          data:
            message: "{{msg}}"
        - service: notify.telegram_id2
          data:
            message: "{{msg}}"
        
    send_on_main_door_open:
      alias: '–ê–ª—è—Ä–º–∞ –ø—Ä–∏ –≤—ñ–¥—Ä–∏—Ç—Ç—ñ –≤—Ö—ñ–¥–Ω–∏—Ö –¥–≤–µ—Ä–µ–π'
      variables: 
        msg: "–í—ñ–¥–∫—Ä–∏—Ç—ñ –≤—Ö—ñ–¥–Ω—ñ –¥–≤–µ—Ä—ñ üö™"
      sequence:
        - service: notify.telegram_id1
          data:
            message: "{{msg}}"
        - service: notify.telegram_id2
          data:
            message: "{{msg}}"
    send_on_garage_door_open:
      alias: '–ê–ª—è—Ä–º–∞ –ø—Ä–∏ –≤—ñ–¥—Ä–∏—Ç—Ç—ñ –≤–æ—Ä—ñ—Ç'
      variables: 
        msg: "–í–æ—Ä–æ—Ç–∞ –≤—ñ–¥–∫—Ä–∏—Ç—ñ üö™"
      sequence:
        - service: notify.telegram_id1
          data:
            message: "{{msg}}"
        - service: notify.telegram_id2
          data:
            message: "{{msg}}"
    send_on_garage_door_closed:
      alias: '–ê–ª—è—Ä–º–∞ –ø—Ä–∏ –∑–∞–∫—Ä–∏—Ç—Ç—ñ –≤–æ—Ä—ñ—Ç'
      variables: 
        msg: "–í–æ—Ä–æ—Ç–∞ –∑–∞–∫—Ä–∏—Ç—ñ üö™"
      sequence:
        - service: notify.telegram_id1
          data:
            message: "{{msg}}"
        - service: notify.telegram_id2
          data:
            message: "{{msg}}"

    send_on_rainy_window_open:
      alias: '–ê–ª—è—Ä–º–∞ - –ø—Ä–∏ –¥–æ—â—ñ –∑–∞–∫—Ä–∏—Ç–∏ –Ω–∞ –º–∞–Ω—Å–∞—Ä–¥—ñ –≤—ñ–∫–Ω–∞'
      variables:
        msg: "–ù–∞ –≤—É–ª–∏—Ü—ñ –¥–æ—â, –∞ –≤—ñ–∫–Ω–∞ –Ω–∞ –º–∞–Ω—Å–∞—Ä–¥—ñ –≤—ñ–¥—Ä–∏—Ç—ñ üò±"
      sequence:
        - service: notify.telegram_id1
          data:
            message: "{{msg}}"
        - service: notify.telegram_id2
          data:
            message: "{{msg}}"
    
    send_on_boiler_on_and_any_window_open:
      alias: '–ê–ª—è—Ä–º–∞ –ø—Ä–∏ –≤–∫–ª—é—á–µ–Ω—ñ –∫–æ—Ç–ª–∞ –ø—Ä–∏ –≤—ñ–¥—Ä–∏—Ç–æ–º—É –±—É–¥—å-—è–∫–æ–º –≤—ñ–∫–Ω—ñ –≤ –∫—ñ–º–Ω–∞—Ç–∞—Ö'
      variables:
        msg: |
          ‚ô® ‚Ñπ –û–ø–∞–ª–µ–Ω–Ω—è —É–≤—ñ–º–∫–Ω—É–ª–æ—Å—å, –∞–ª–µ —î –≤—ñ–¥–∫—Ä–∏—Ç—ñ –≤—ñ–∫–Ω–∞ –≤:
          {% if is_state('binary_sensor.0x00158d0001ddc9c2_contact', 'on') %} –í—ñ—Ç–∞–ª—å–Ω—è 
          {% endif %}{% if is_state('binary_sensor.0x00158d0001de18e8_contact', 'on') %} –°–ø–∞–ª—å–Ω—è 
          {% endif %}{% if is_state('binary_sensor.0x00158d0001e4d72a_contact', 'on') %} –î–∏—Ç—è—á–∞ 
          {% endif %}{% if is_state('binary_sensor.0x00158d0001e4c675_contact', 'on') %} –ö—É—Ö–Ω—è 
          {% endif %}
      sequence:
        - service: notify.telegram_id1
          data:
            message: "{{msg}}"
        - service: notify.telegram_id2
          data:
            message: "{{msg}}"

    send_on_wash_end:
      alias: '–°—Ç—ñ—Ä–∫–∞ –∑–∞–∫—ñ–Ω—á–∏–ª–∞—Å—å'
      variables:
          msg: |
            ‚Ñπ –ú–∞—à–∏–Ω–∫–∞ –∑–∞–∫—ñ–Ω—á–∏–ª–∞ —Å—Ç—ñ—Ä–∫—É

      sequence:
          - service: notify.telegram_id1
            data:
              message: "{{msg}}"
          - service: notify.telegram_id2
            data:
              message: "{{msg}}"
  
  automation:
    - id: Telegram Bot Menu
      alias: telegram_bot_menu
      trigger:
        platform: event
        event_type: telegram_command
        event_data:
          command: '/start'
      action:
        - service: notify.telegram_id1
          data:
            message: 'commands'
            data:
              keyboard:
                - '/status'
        - service: notify.telegram_id2
          data:
            message: 'commands'
            data:
              keyboard:
                - '/status'
                # - '/siren'

    - id: –ó–≤—ñ—Ç –ø—Ä–∏ –∑–∞–ø—É—Å–∫—É
      alias: startup_bot_message
      trigger:
        - platform: homeassistant
          event: start
      action:
        - service: notify.telegram_id1
          data:
            message: |
              {{ "ü§ñ" }} –ó–∞–ø—É—Å–∫ HAs —Å–µ—Ä–≤–µ—Ä–∞ ({{ states('sensor.time_date') }})
        - delay: 00:01:00
        - service: script.turn_on
          entity_id: script.send_system_status_report

    - id: –ó–∞–ø–∏—Ç –Ω–∞ –∑–≤—ñ—Ç
      alias: send_report
      initial_state: true
      trigger:
      - platform: event
        event_type: telegram_command
        event_data:
          command: '/status'
      action:
        - service: script.turn_on
          entity_id: script.send_system_status_report
          # data:
          #   chat_id: "{{trigger.event.data.chat_id}}"
